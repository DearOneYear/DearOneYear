{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ditto\\\\Documents\\\\DearOneYear\\\\FE\\\\src\\\\routes\\\\reading\\\\ReadingLetter.js\";\nimport LetterOpen from \"./LetterOpen\";\nimport LetterClose from \"./LetterClose\";\nimport dummyLetter from \"../letterbox/dummy/dummyLetter.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReadingLetter = () => {\n  let currUrl = window.document.location.href;\n  let urlArr = currUrl.split(\"/\");\n  let letterId = parseInt(urlArr[urlArr.length - 1]);\n  let letters = dummyLetter.letters;\n  let currLetter;\n  letters.map(l => {\n    if (l.id === letterId) {\n      currLetter = l;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currLetter.dday > 0 ? /*#__PURE__*/_jsxDEV(LetterClose, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(LetterOpen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 53\n    }, this)\n  }, void 0, false);\n};\n_c = ReadingLetter;\nexport default ReadingLetter;\nvar _c;\n$RefreshReg$(_c, \"ReadingLetter\");","map":{"version":3,"names":["LetterOpen","LetterClose","dummyLetter","ReadingLetter","currUrl","window","document","location","href","urlArr","split","letterId","parseInt","length","letters","currLetter","map","l","id","dday"],"sources":["C:/Users/Ditto/Documents/DearOneYear/FE/src/routes/reading/ReadingLetter.js"],"sourcesContent":["import LetterOpen from \"./LetterOpen\";\r\nimport LetterClose from \"./LetterClose\";\r\nimport dummyLetter from \"../letterbox/dummy/dummyLetter.json\";\r\n\r\nconst ReadingLetter = () => {\r\n  let currUrl = window.document.location.href;\r\n  let urlArr = currUrl.split(\"/\");\r\n  let letterId = parseInt(urlArr[urlArr.length - 1]);\r\n\r\n  let letters = dummyLetter.letters;\r\n  let currLetter;\r\n\r\n  letters.map((l) => {\r\n    if (l.id === letterId) {\r\n      currLetter = l;\r\n    }\r\n  });\r\n\r\n  return <>{currLetter.dday > 0 ? <LetterClose /> : <LetterOpen />}</>;\r\n};\r\n\r\nexport default ReadingLetter;\r\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,qCAAqC;AAAC;AAAA;AAE9D,MAAMC,aAAa,GAAG,MAAM;EAC1B,IAAIC,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,IAAI;EAC3C,IAAIC,MAAM,GAAGL,OAAO,CAACM,KAAK,CAAC,GAAG,CAAC;EAC/B,IAAIC,QAAQ,GAAGC,QAAQ,CAACH,MAAM,CAACA,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC;EAElD,IAAIC,OAAO,GAAGZ,WAAW,CAACY,OAAO;EACjC,IAAIC,UAAU;EAEdD,OAAO,CAACE,GAAG,CAAEC,CAAC,IAAK;IACjB,IAAIA,CAAC,CAACC,EAAE,KAAKP,QAAQ,EAAE;MACrBI,UAAU,GAAGE,CAAC;IAChB;EACF,CAAC,CAAC;EAEF,oBAAO;IAAA,UAAGF,UAAU,CAACI,IAAI,GAAG,CAAC,gBAAG,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,gBAAG,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA;EAAG,iBAAI;AACtE,CAAC;AAAC,KAfIhB,aAAa;AAiBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}