{"ast":null,"code":"import _slicedToArray from\"C:/Users/Ditto/Documents/DearOneYear/FE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useNavigate}from\"react-router-dom\";// import * as S from \"./style\"\nimport{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Write1(){// const [huge, setHuge] = useState(false)\nvar navigate=useNavigate();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),who=_useState2[0],setWho=_useState2[1];console.log(who);function Who(e){if(e.target.id==='tome'){setWho('tome');navigate(\"/write/write3/tome\");}else if(e.target.id==='toyou'){setWho('toyou');navigate(\"/write/write2\");}};return/*#__PURE__*/ (// <S.Container onClick={()=>{setHuge(!huge)}}>\n// <S.Title huge={huge}>편지하기</S.Title>\n// {huge && <h3>여깄다</h3>}\n// <h3>누구에게 편지할 건가요?</h3>\n// {huge && <S.Text>이거입니다</S.Text>}\n// <div>\n//     <Link to=\"/write/write3\"><button type=\"button\" >나에게</button></Link>\n//     <Link to=\"/write/write2\"><button type=\"button\" >너에게</button></Link>\n// </div>\n// </S.Container>\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uB204\\uAD6C\\uC5D0\\uAC8C \\uD3B8\\uC9C0\\uD560 \\uAC74\\uAC00\\uC694?\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",id:\"tome\",onClick:Who,children:\"\\uB098\\uC5D0\\uAC8C\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",id:\"toyou\",onClick:Who,children:\"\\uB108\\uC5D0\\uAC8C\"})]})]}));};export default Write1;","map":{"version":3,"names":["useNavigate","useState","Write1","navigate","who","setWho","console","log","Who","e","target","id"],"sources":["C:/Users/Ditto/Documents/DearOneYear/FE/src/routes/write/write1.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\n// import * as S from \"./style\"\r\nimport {useState} from \"react\"\r\nfunction Write1() {\r\n    // const [huge, setHuge] = useState(false)\r\n    const navigate = useNavigate();\r\n    const [who, setWho]= useState('') ;\r\n    console.log(who);\r\n\r\n\r\n\r\n    function Who(e) {\r\n        if (e.target.id ==='tome'){\r\n            setWho('tome');\r\n            navigate(`/write/write3/tome`);\r\n        }\r\n        else if (e.target.id ==='toyou'){\r\n            setWho('toyou');\r\n            navigate(`/write/write2`)\r\n        }\r\n\r\n    };\r\n    \r\n\r\n    return (\r\n        // <S.Container onClick={()=>{setHuge(!huge)}}>\r\n        // <S.Title huge={huge}>편지하기</S.Title>\r\n        // {huge && <h3>여깄다</h3>}\r\n        // <h3>누구에게 편지할 건가요?</h3>\r\n        // {huge && <S.Text>이거입니다</S.Text>}\r\n        // <div>\r\n        //     <Link to=\"/write/write3\"><button type=\"button\" >나에게</button></Link>\r\n        //     <Link to=\"/write/write2\"><button type=\"button\" >너에게</button></Link>\r\n        // </div>\r\n        // </S.Container>\r\n        <>\r\n                <h3>누구에게 편지할 건가요?</h3>\r\n        <div>\r\n            {/* <Link to=\"/write/write3\"> */}\r\n                <button type=\"button\" id=\"tome\" onClick={Who}>나에게</button>\r\n                {/* </Link> */}\r\n            {/* <Link to=\"/write/write2\"> */}\r\n                <button type=\"button\" id=\"toyou\" onClick={Who}>너에게</button>\r\n                {/* </Link> */}\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Write1;"],"mappings":"6HAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C;AACA,OAAQC,QAAQ,KAAO,OAAO,8IAC9B,QAASC,OAAM,EAAG,CACd;AACA,GAAMC,SAAQ,CAAGH,WAAW,EAAE,CAC9B,cAAqBC,QAAQ,CAAC,EAAE,CAAC,wCAA1BG,GAAG,eAAEC,MAAM,eAClBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC,CAIhB,QAASI,IAAG,CAACC,CAAC,CAAE,CACZ,GAAIA,CAAC,CAACC,MAAM,CAACC,EAAE,GAAI,MAAM,CAAC,CACtBN,MAAM,CAAC,MAAM,CAAC,CACdF,QAAQ,sBAAsB,CAClC,CAAC,IACI,IAAIM,CAAC,CAACC,MAAM,CAACC,EAAE,GAAI,OAAO,CAAC,CAC5BN,MAAM,CAAC,OAAO,CAAC,CACfF,QAAQ,iBAAiB,CAC7B,CAEJ,CAAC,CAGD,oBACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCACQ,uFAAsB,cAC9B,oCAEQ,eAAQ,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAEK,GAAI,gCAAa,cAG1D,eAAQ,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAEA,GAAI,gCAAa,GAE7D,GACH,EAEX,CAAC,CAED,cAAeN,OAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}