[{"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\index.js":"1","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\global.js":"2","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\App.js":"3","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\components\\Router.js":"4","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\mypage\\MyPageEdit.js":"5","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\mypage\\MyPage.js":"6","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\auth\\KakaoLogin.js":"7","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\letterbox\\LetterBox_unread.js":"8","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\main\\Main.js":"9","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\OpenGift.js":"10","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\OpenBottle.js":"11","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\ReadingLetter.js":"12","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\letterbox\\LetterBox_read.js":"13","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\OpenPhoto.js":"14","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\letterbox\\LetterBoxNav.js":"15","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\LetterOpen.js":"16","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\LetterClose.js":"17","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write3.js":"18","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write2.js":"19","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write4.js":"20","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write1.js":"21","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write6.js":"22","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write5.js":"23","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\Confirm1.js":"24"},{"size":268,"mtime":1669640603627,"results":"25","hashOfConfig":"26"},{"size":203,"mtime":1669640603626,"results":"27","hashOfConfig":"26"},{"size":175,"mtime":1669640603604,"results":"28","hashOfConfig":"26"},{"size":2846,"mtime":1669640603605,"results":"29","hashOfConfig":"26"},{"size":1674,"mtime":1669284429605,"results":"30","hashOfConfig":"26"},{"size":6656,"mtime":1669640603636,"results":"31","hashOfConfig":"26"},{"size":4025,"mtime":1669640603629,"results":"32","hashOfConfig":"26"},{"size":7752,"mtime":1669640603632,"results":"33","hashOfConfig":"26"},{"size":6071,"mtime":1669640603634,"results":"34","hashOfConfig":"26"},{"size":2026,"mtime":1669640603640,"results":"35","hashOfConfig":"26"},{"size":1741,"mtime":1669640603639,"results":"36","hashOfConfig":"26"},{"size":582,"mtime":1669284429611,"results":"37","hashOfConfig":"26"},{"size":7129,"mtime":1669640603631,"results":"38","hashOfConfig":"26"},{"size":1677,"mtime":1669640603642,"results":"39","hashOfConfig":"26"},{"size":1933,"mtime":1669640603630,"results":"40","hashOfConfig":"26"},{"size":1836,"mtime":1669640603637,"results":"41","hashOfConfig":"26"},{"size":2348,"mtime":1669284429606,"results":"42","hashOfConfig":"26"},{"size":2448,"mtime":1669640603647,"results":"43","hashOfConfig":"26"},{"size":1381,"mtime":1669640603646,"results":"44","hashOfConfig":"26"},{"size":1717,"mtime":1669640603648,"results":"45","hashOfConfig":"26"},{"size":1574,"mtime":1669640603646,"results":"46","hashOfConfig":"26"},{"size":2070,"mtime":1669640603650,"results":"47","hashOfConfig":"26"},{"size":1507,"mtime":1669640603649,"results":"48","hashOfConfig":"26"},{"size":453,"mtime":1669640603644,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lvs4iu",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\index.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\global.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\App.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\components\\Router.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\mypage\\MyPageEdit.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\mypage\\MyPage.js",["134","135","136","137","138"],[],"import { Link } from \"react-router-dom\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\n\r\nconst url = \"/img/background.png\";\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(${url});\r\n  background-repeat: no-repeat;\r\n  background-origin: padding-box;\r\n  background-size: cover;\r\n`;\r\nconst Header = styled.div`\r\n  width: 100vw;\r\n`;\r\nconst Title = styled.p`\r\n  position: relative;\r\n  left: 4.5rem;\r\n  top: 0rem;\r\n  width: 20rem;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 28px;\r\n\r\n  letter-spacing: 0.02em;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nconst LogoutBtn = styled.p`\r\n  position: relative;\r\n  height: 1.5rem;\r\n  left: -2rem;\r\n  top: -2.9rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n  /* identical to box height */\r\n\r\n  text-align: right;\r\n\r\n  color: #ffffff;\r\n`;\r\nconst Welcome = styled.div`\r\n  position: relative;\r\n  left: 1.5rem;\r\n  top: 0rem;\r\n  width: 70vw;\r\n`;\r\n\r\nconst Bottle = styled.img`\r\n  width: 3.25rem;\r\n  height: 4.063rem;\r\n  filter: drop-shadow(4px 4px 10px rgba(0, 0, 0, 0.15));\r\n`;\r\n\r\nconst WelcomeTxt = styled.p`\r\n  position: relative;\r\n  left: 3.5rem;\r\n  top: -4.5rem;\r\n\r\n  margin: 0.5rem;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.75rem;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 0.313rem rgba(0, 0, 0, 0.25);\r\n`;\r\nconst Info = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 3.5rem;\r\n`;\r\nconst Label = styled.span`\r\n  position: relative;\r\n  top: -1rem;\r\n  left: 1.5rem;\r\n  width: 7rem;\r\n  height: 1.5rem;\r\n  margin: 1.625rem 0;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  position: relative;\r\n  top: -5.75rem;\r\n  left: 5.5rem;\r\n  width: 20rem;\r\n  height: 24px;\r\n  margin: 1.625rem 0;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nconst MyPage = () => {\r\n  // navigate\r\n  const navigate = useNavigate();\r\n\r\n  // 전역 변수\r\n  let kakaoToken = \"\";\r\n  let access_token = \"\";\r\n  const [dbUserInfo, setDbUserInfo] = useState([]);\r\n  const [month, setMonth] = useState(0);\r\n  const [date, setDate] = useState(0);\r\n\r\n  // 쿠키 받기\r\n  const getCookie = () => {\r\n    let cookie = document.cookie.split(\";\");\r\n    let cookieArr = [];\r\n    cookie.map((e) => {\r\n      let c = e.split(\"=\");\r\n      cookieArr.push(c);\r\n    });\r\n    console.log(cookieArr);\r\n    // 쿠키 속 access_token, my_access_token 받기\r\n    let key = [];\r\n    cookieArr.map((e) => {\r\n      key.push(e[0]);\r\n    });\r\n    let indexAccessToken = key.indexOf(\" my_access_token\");\r\n    let indexKakaoToken = key.indexOf(\" access_token\");\r\n    access_token = cookieArr[indexAccessToken][1];\r\n    kakaoToken = cookieArr[indexKakaoToken][1];\r\n\r\n    // access_token이 있다면 (로그인이 되어 있다면) 유저 정보 가져오기\r\n    if (access_token !== \"\") {\r\n      getUserInfo();\r\n    }\r\n    return access_token, kakaoToken;\r\n  };\r\n\r\n  // 이전 페이지에서 넘겨준 email 값 가져오기\r\n  const location = useLocation();\r\n  const email = location.state.email.userEmail;\r\n  console.log(email);\r\n\r\n  // 이메일로 유저 정보 받아오기\r\n  const getUserInfo = async () => {\r\n    await axios\r\n      .get(\"http://localhost:8000/accounts/mypage/\", {\r\n        headers: { Email: `Bearer ${email}` }, // userEmail 앞에서 받은 놈 넣어줍쇼\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setDbUserInfo(res.data);\r\n        birthbirth(res.data);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // 월 일 따로 받아오는 함수\r\n  const birthbirth = (dbUserInfo) => {\r\n    let birthday = dbUserInfo.birthday.split(\"T\")[0].split(\"-\");\r\n    setMonth(birthday[1]);\r\n    setDate(birthday[2]);\r\n  };\r\n\r\n  // 로그아웃 버튼 클릭 시\r\n  const logout = () => {\r\n    getCookie();\r\n    console.log(kakaoToken);\r\n    sendToken(kakaoToken);\r\n  };\r\n\r\n  // 카카오 로그아웃\r\n  const sendToken = async (kakaoToken) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/accounts/signout/kakao/\",\r\n        \"\",\r\n        {\r\n          headers: {\r\n            Kakaoauth: `${kakaoToken}`, // Bearer 넣지 말 것! JWT 토큰으로 착각해서 Unauthorized 에러 남.\r\n          },\r\n        }\r\n      );\r\n      console.log(response);\r\n      deleteCookie(\" access_token\");\r\n      deleteCookie(\" my_access_token\");\r\n      deleteCookie(\" my_refresh_token\");\r\n\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const setCookie = (key, value, expiredays) => {\r\n    let todayDate = new Date();\r\n    todayDate.setDate(todayDate.getDate() + expiredays);\r\n    document.cookie =\r\n      key +\r\n      \"=\" +\r\n      escape(value) +\r\n      \"; path=/; expires=\" +\r\n      todayDate.toGMTString() +\r\n      \";\";\r\n  };\r\n\r\n  const deleteCookie = (key) => {\r\n    setCookie(key, \"\", -1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCookie();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <IoIosArrowBack\r\n          onClick={() => navigate(-1)}\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"2.125rem\",\r\n            height: \"2.125rem\",\r\n            left: \"1.5rem\",\r\n            top: \"3.4rem\",\r\n            color: \"white\",\r\n          }}\r\n        />\r\n\r\n        <Title>마이 페이지</Title>\r\n        <LogoutBtn onClick={logout}>로그아웃</LogoutBtn>\r\n      </Header>\r\n\r\n      <Welcome>\r\n        <Bottle src=\"img/closedbottle.png\" alt=\"closedbottle\" />\r\n        <WelcomeTxt>안녕하세요, 이름 님.</WelcomeTxt>\r\n        <WelcomeTxt>당신만의 유리병을 찾으셨나요?</WelcomeTxt>\r\n      </Welcome>\r\n\r\n      <Info>\r\n        <Label>이름</Label>\r\n        <Value>{dbUserInfo.name}</Value>\r\n      </Info>\r\n      <Info>\r\n        <Label>계정</Label>\r\n        <Value>{dbUserInfo.email}</Value>\r\n      </Info>\r\n      <Info>\r\n        <Label>생일</Label>\r\n        <Value>\r\n          {month}월 {date}일\r\n        </Value>\r\n      </Info>\r\n\r\n      {/* <Link to=\"/mypage/edit\">\r\n        <button>프로필 수정하기</button>\r\n      </Link> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\auth\\KakaoLogin.js",["139","140"],[],"import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\n\r\nconst url = \"/img/clear.png\";\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(${url});\r\n  background-repeat: no-repeat;\r\n  background-origin: padding-box;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  position: relative;\r\n  left: 4.5rem;\r\n  top: 0rem;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 28px;\r\n\r\n  letter-spacing: 0.02em;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nconst TextArea = styled.div`\r\n  position: relative;\r\n  width: 22rem;\r\n  height: 7rem;\r\n  top: 10.125rem;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst InfoTxt = styled.p`\r\n  margin: 0em;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 2rem;\r\n\r\n  text-align: center;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst LoginBtn = styled.img`\r\n  position: relative;\r\n  width: 23.875rem;\r\n  height: 3.563rem;\r\n  top: 34.5rem;\r\n`;\r\n\r\nconst KakaoLogin = () => {\r\n  // const onClickLogin = async () => {\r\n  //   console.log('ㅋㅋㅇㄺㅇ');\r\n  //    await axios.get('http://localhost:8000/accounts/signin/kakao/')\r\n  //           .then((res) => console.log(res))\r\n  //           .catch(function (error) {\r\n  //               console.log(error);\r\n  //           })\r\n  // }\r\n  const navigate = useNavigate();\r\n  let kakaoUrl = \"http://localhost:8000/accounts/signin/kakao/\";\r\n  let kakaoCallbackUrl =\r\n    \"http://localhost:8000/accounts/signin/kakao/callback/\";\r\n  const onClickLogin = () => {\r\n    window.location.href = kakaoUrl;\r\n    // axios.get(kakaoUrl, {\r\n    //   params: {\r\n    //     redirect_uri: \"http://localhost:3000/login/\"\r\n    //   }\r\n    // })\r\n    //   .then((response) => console.log(response)).catch(function (err) {console.log(err)})\r\n  };\r\n  let currUrl = window.document.location.href;\r\n  let params = new URL(document.URL).searchParams;\r\n  let code = params.get(\"code\");\r\n  const data = {\r\n    code: `${code}`,\r\n  };\r\n  const config = { \"Content-Type\": \"application/json\" };\r\n\r\n  const loginHandler = async () => {\r\n    await axios\r\n      .post(`${kakaoCallbackUrl}`, data, config)\r\n      .then((res) => {\r\n        console.log(res);\r\n        // 쿠키 설정\r\n        setCookie(\"my_access_token\", res.data.my_access_token, 30);\r\n        setCookie(\"my_refresh_token\", res.data.my_refresh_token, 30);\r\n        setCookie(\"access_token\", res.data.access_token, 1);\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const setCookie = (key, value, expiredays) => {\r\n    let todayDate = new Date();\r\n    todayDate.setDate(todayDate.getDate() + expiredays);\r\n    document.cookie =\r\n      key +\r\n      \"=\" +\r\n      escape(value) +\r\n      \"; path=/; expires=\" +\r\n      todayDate.toGMTString() +\r\n      \";\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (code) {\r\n      loginHandler(code);\r\n    } else {\r\n      console.log(\"에러\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <IoIosArrowBack\r\n        onClick={() => navigate(-1)}\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"2.125rem\",\r\n          height: \"2.125rem\",\r\n          left: \"1.5rem\",\r\n          top: \"3.4rem\",\r\n          color: \"white\",\r\n        }}\r\n      />\r\n      <Title>로그인 / 회원가입</Title>\r\n      <center>\r\n        <TextArea>\r\n          <InfoTxt>세상에서 가장 소중한 사람,</InfoTxt>\r\n          <InfoTxt>바로 당신에게 편지하세요.</InfoTxt>\r\n          <InfoTxt>세상에서 가장 큰 위로, 응원, 사랑이</InfoTxt>\r\n          <InfoTxt>되어드릴게요.</InfoTxt>\r\n        </TextArea>\r\n        <LoginBtn src=\"/img/kakaologin.png\" onClick={onClickLogin} />\r\n      </center>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default KakaoLogin;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\letterbox\\LetterBox_unread.js",["141","142","143","144","145","146","147"],[],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport LetterBoxNav from \"./LetterBoxNav\";\r\nimport new_dummy from \"./dummy/new_dummy.json\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport { BsFillPersonFill, BsLink45Deg } from \"react-icons/bs\";\r\n\r\nconst url = \"/img/background.png\";\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(${url});\r\n  background-repeat: no-repeat;\r\n  background-origin: padding-box;\r\n  background-size: cover;\r\n`;\r\nconst Title = styled.p`\r\n  position: relative;\r\n  width: 4.563rem;\r\n  height: 2rem;\r\n  left: 1.5rem;\r\n  top: 5.625rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n\r\n  letter-spacing: 0.02rem;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst Letter = styled.div`\r\n  position: relative;\r\n  width: 19.25rem;\r\n  height: 3.625rem;\r\n  left: 1.688rem;\r\n  top: 1rem;\r\n`;\r\n\r\nconst LetterTitle = styled.p`\r\n  position: relative;\r\n  height: 1.813rem;\r\n  left: 4.2rem;\r\n  top: -2.625rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  line-height: 1.813rem;\r\n  /* identical to box height */\r\n\r\n  color: #ffffff;\r\n\r\n  /* 기본 그림자 */\r\n\r\n  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst LetterPeriod = styled.p`\r\n  position: relative;\r\n  height: 1.813rem;\r\n  left: 4.2rem;\r\n  top: -6.5rem;\r\n  margin: 0;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.1rem;\r\n  line-height: 1.813rem;\r\n  /* identical to box height */\r\n\r\n  color: #ffffff;\r\n\r\n  /* 기본 그림자 */\r\n`;\r\n\r\nconst NewLetterBtn = styled.button`\r\n  position: relative;\r\n  width: 23.875rem;\r\n  height: 3.563rem;\r\n  top: 29rem;\r\n\r\n  background: rgba(50, 50, 50, 0.7);\r\n  border: 0.075rem solid #ffffff;\r\n  box-shadow: 0px 0.25rem 1.5rem -0.063rem rgba(0, 0, 0, 0.2);\r\n  backdrop-filter: blur(0.625rem);\r\n\r\n  border-radius: 0.625rem;\r\n`;\r\n\r\nconst NewLetterTxt = styled.p`\r\n  position: relative;\r\n  width: 12.188rem;\r\n  height: 1.5rem;\r\n  top: 32.8rem;\r\n  z-index: 3;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nconst ClosedBottle = styled.img`\r\n  position: relative;\r\n  width: 2.938rem;\r\n  height: 58px;\r\n  top: 2.5rem;\r\n`;\r\n\r\nconst LetterBoxUnread = () => {\r\n  // 백 없이 작업 (더미)\r\n  // let unOpenedLetters = [new_dummy];\r\n  // unOpenedLetters.map((e) => {\r\n  //   let open = e.openAt.split(\"T\")[0].split(\"-\");\r\n  //   e.openYear = open[0];\r\n  //   e.openMonth = open[1];\r\n  //   e.openDate = open[2];\r\n\r\n  //   let send = e.sendAt.split(\"T\")[0].split(\"-\");\r\n  //   e.sendYear = send[0];\r\n  //   e.sendMonth = send[1];\r\n  //   e.sendDate = send[2];\r\n  // });\r\n\r\n  // 백 연결시\r\n  const location = useLocation();\r\n  const email = location.state.email.userEmail;\r\n\r\n  console.log(email);\r\n\r\n  let [dbLetter, setDbLetter] = useState([]);\r\n  let [accessToken, setAccessToken] = useState(\"\");\r\n\r\n  const getCookie = () => {\r\n    let cookie = document.cookie.split(\";\");\r\n    let cookieArr = [];\r\n    cookie.map((e) => {\r\n      let c = e.split(\"=\");\r\n      cookieArr.push(c);\r\n    });\r\n    setAccessToken(cookieArr[2][1]);\r\n  };\r\n\r\n  const getLetter = async () => {\r\n    await axios\r\n      .get(\"http://localhost:8000/letter/letterbox/\", {\r\n        headers: { Email: `Bearer ${email}` }, // userEmail 앞에서 받은 놈 넣어줍쇼\r\n      })\r\n      .then((res) => {\r\n        setDbLetter([...res.data]);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  dbLetter.map((e) => {\r\n    let open = e.openAt.split(\"T\")[0].split(\"-\");\r\n    e.openYear = open[0];\r\n    e.openMonth = open[1];\r\n    e.openDate = open[2];\r\n\r\n    let send = e.sendAt.split(\"T\")[0].split(\"-\");\r\n    e.sendYear = send[0];\r\n    e.sendMonth = send[1];\r\n    e.sendDate = send[2];\r\n  });\r\n\r\n  // console.log(dbLetter);\r\n\r\n  useEffect(() => {\r\n    getCookie();\r\n    getLetter();\r\n  }, []);\r\n\r\n  let unOpenedLetters = [];\r\n  dbLetter.map((l) => {\r\n    if (l.isOpend !== true) {\r\n      unOpenedLetters.push(l);\r\n    }\r\n  });\r\n\r\n  console.log(unOpenedLetters);\r\n\r\n  //링크 공유하기\r\n  let url = document.location.href;\r\n  const onShareClick = (e) => {\r\n    let shareUrl = url + \"/\" + e.target.id;\r\n    console.log(shareUrl);\r\n    let textArea = document.createElement(\"textarea\");\r\n    document.body.appendChild(textArea);\r\n    textArea.value = shareUrl;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n    alert(\"링크가 복사되었습니다.\");\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const openLetter = (e) => {\r\n    console.log(\"클릭됨\");\r\n    console.log(e.target.id);\r\n    navigate(`/detail/${e.target.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title>편지함</Title>\r\n        <AiFillHome\r\n          onClick={() => navigate(\"/\")}\r\n          style={{\r\n            color: \"white\",\r\n            position: \"relative\",\r\n            width: \"2.125rem\",\r\n            height: \"2.125rem\",\r\n            left: \"19.3rem\",\r\n            top: \"2rem\",\r\n          }}\r\n        />\r\n        <BsFillPersonFill\r\n          onClick={() => navigate(\"/mypage\")}\r\n          style={{\r\n            color: \"white\",\r\n            position: \"relative\",\r\n            width: \"2.125rem\",\r\n            height: \"2.125rem\",\r\n            left: \"20rem\",\r\n            top: \"2rem\",\r\n          }}\r\n        />\r\n        <LetterBoxNav />\r\n\r\n        {unOpenedLetters.map((letter) => (\r\n          <Letter key={letter.id} id={letter.id}>\r\n            <div onClick={openLetter} id={letter.id}>\r\n              {letter.isOpend === true ? (\r\n                <img\r\n                  style={{ width: \"10%\" }}\r\n                  src=\"/img/opendbottle.png\"\r\n                  alt=\"open\"\r\n                  id={letter.id}\r\n                />\r\n              ) : (\r\n                <ClosedBottle\r\n                  src=\"/img/closedbottle.png\"\r\n                  alt=\"close\"\r\n                  id={letter.id}\r\n                />\r\n              )}\r\n\r\n              {letter.to_name !== letter.from_name ? (\r\n                <LetterTitle id={letter.id}>\r\n                  D - {letter.dday} {letter.to_name}에게\r\n                </LetterTitle>\r\n              ) : (\r\n                <LetterTitle id={letter.id}>나에게</LetterTitle>\r\n              )}\r\n            </div>\r\n            {letter.to_name !== letter.from_name ? (\r\n              <BsLink45Deg\r\n                style={{\r\n                  color: \"white\",\r\n                  position: \"relative\",\r\n                  width: \"2.125rem\",\r\n                  height: \"2.125rem\",\r\n                  left: \"20rem\",\r\n                  top: \"-6rem\",\r\n                }}\r\n                onClick={onShareClick}\r\n                id={letter.id}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <LetterPeriod>\r\n              {`${letter.sendYear}.${letter.sendMonth}.${letter.sendDate}.`} →{\" \"}\r\n              {`${letter.openYear}.${letter.openMonth}.${letter.openDate}.`}\r\n            </LetterPeriod>\r\n          </Letter>\r\n        ))}\r\n        <center>\r\n          <NewLetterTxt>새로운 편지하러 가기</NewLetterTxt>\r\n          <NewLetterBtn></NewLetterBtn>\r\n        </center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LetterBoxUnread;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\main\\Main.js",["148","149","150","151","152","153"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"/img/clear.png\";\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(${url});\r\n  background-repeat: no-repeat;\r\n  background-origin: padding-box;\r\n  background-size: cover;\r\n`;\r\nconst Header = styled.div`\r\n  width: 100vw;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  position: relative;\r\n  width: 10rem;\r\n  height: 2rem;\r\n  left: 1.5rem;\r\n  top: 2rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n\r\n  letter-spacing: 0.02rem;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst LoginBtn = styled.p`\r\n  position: relative;\r\n  height: 1.5rem;\r\n  left: -2rem;\r\n  top: -1.3rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n  /* identical to box height */\r\n\r\n  text-align: right;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Text1 = styled.p`\r\n  position: relative;\r\n  width: 313px;\r\n  height: 4.875rem;\r\n  left: 5rem;\r\n  top: 4rem;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  line-height: 2.5rem;\r\n\r\n  text-align: right;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 0.25rem rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst Text2 = styled.p`\r\n  position: relative;\r\n  width: 313px;\r\n  left: 5rem;\r\n  top: 0rem;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 2rem;\r\n  line-height: 2.5rem;\r\n\r\n  text-align: right;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 0.25rem rgba(0, 0, 0, 0.25);\r\n`;\r\nconst Text3 = styled.p`\r\n  position: relative;\r\n  width: 60vw;\r\n  height: 2rem;\r\n  top: 5rem;\r\n  margin: 0;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.75ren;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 0.25rem rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst NewLetterBtn = styled.button`\r\n  position: relative;\r\n  width: 90vw;\r\n  height: 3.563rem;\r\n  top: 21rem;\r\n\r\n  background: rgba(50, 50, 50, 0.7);\r\n  border: 0.075rem solid #ffffff;\r\n  box-shadow: 0px 0.25rem 1.5rem -0.063rem rgba(0, 0, 0, 0.2);\r\n  backdrop-filter: blur(0.625rem);\r\n\r\n  border-radius: 0.625rem;\r\n`;\r\n\r\nconst NewLetterTxt = styled.p`\r\n  position: relative;\r\n  width: 12.188rem;\r\n  height: 1.5rem;\r\n  top: 24.7rem;\r\n  z-index: 3;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nfunction Main() {\r\n  // navigator\r\n  const navigate = useNavigate();\r\n\r\n  // 전역 변수\r\n  let access_token = \"\";\r\n  let [userEmail, setUserEmail] = useState(\"\");\r\n  let [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // 쿠키 받기\r\n  const getCookie = () => {\r\n    let cookie = document.cookie.split(\";\");\r\n    let cookieArr = [];\r\n    if (cookie.length !== 0) {\r\n      cookie.map((e) => {\r\n        let c = e.split(\"=\");\r\n        cookieArr.push(c);\r\n      });\r\n    }\r\n\r\n    // 쿠키 속 access_token 받기\r\n    let key = [];\r\n    cookieArr.map((e) => {\r\n      key.push(e[0]);\r\n    });\r\n    if (key.includes(\" access_token\") === true) {\r\n      let indexAccessToken = key.indexOf(\" my_access_token\");\r\n      access_token = cookieArr[indexAccessToken][1];\r\n    }\r\n  };\r\n\r\n  // 로그인 상태 체크\r\n  const userCheck = () => {\r\n    console.log(access_token);\r\n    let tokenVerifyUrl = \"http://localhost:8000/accounts/verify/\";\r\n    const getDB = async () => {\r\n      try {\r\n        const response = await axios.get(`${tokenVerifyUrl}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${access_token}`,\r\n          },\r\n        });\r\n\r\n        if (response.data.email.length !== 0) {\r\n          console.log(\"로그인\");\r\n          setUserEmail(response.data.email);\r\n          setIsLoggedIn(true);\r\n        } else {\r\n          console.log(\"login\");\r\n          // navigate(\"/login\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getDB();\r\n  };\r\n\r\n  // 로그인 버튼 클릭 시, 카카오 로그인하기 페이지로 이동\r\n  const login = () => {\r\n    if (access_token === \"\") {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  // 편지하러 가기 클릭 시,\r\n  // 로그인 안되어 있으면 로그인 페이지\r\n  // 로그인되어 있으면 편지 작성 페이지\r\n  const writeLetter = () => {\r\n    if (access_token === \"\") {\r\n      navigate(\"/login\");\r\n    }\r\n    // else {\r\n    //   navigate('편지쓰는 url');\r\n    // }\r\n  };\r\n\r\n  // 편지함, 마이페이지 이동\r\n  const moveTo = (e) => {\r\n    console.log(e.target.id);\r\n    {\r\n      e.target.id === \"letterbox\" &&\r\n        navigate(\"/letterbox/unread\", { state: { email: { userEmail } } });\r\n    }\r\n    {\r\n      e.target.id === \"mypage\" &&\r\n        navigate(\"/mypage\", { state: { email: { userEmail } } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCookie();\r\n    userCheck();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>나의 내일에게</Title>\r\n        {isLoggedIn === false ? (\r\n          <LoginBtn onClick={login}>로그인</LoginBtn>\r\n        ) : (\r\n          <>\r\n            <button id=\"letterbox\" onClick={moveTo}>\r\n              편지함\r\n            </button>\r\n            <button id=\"mypage\" onClick={moveTo}>\r\n              마이페이지\r\n            </button>\r\n          </>\r\n        )}\r\n      </Header>\r\n\r\n      <div>\r\n        <Text1>내일의 당신에게 편지하세요</Text1>\r\n        <Text2>나의 내일에게</Text2>\r\n      </div>\r\n\r\n      <center>\r\n        <Text3>유리병을 눌러</Text3>\r\n        <Text3>익명의 편지를 읽어보세요</Text3>\r\n\r\n        <NewLetterTxt onClick={writeLetter}>편지하러 가기</NewLetterTxt>\r\n        <NewLetterBtn></NewLetterBtn>\r\n      </center>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\OpenGift.js",["154","155","156","157"],[],"import { useNavigate, Link } from \"react-router-dom\";\r\nimport dummyLetter from \"../letterbox/dummy/dummyLetter.json\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst OpenGift = () => {\r\n  // 뒤로 가기\r\n  const navigate = useNavigate();\r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  let currUrl = window.document.location.href;\r\n  let urlArr = currUrl.split(\"/\");\r\n  let letterId = parseInt(urlArr[urlArr.length - 2]);\r\n\r\n  // let letters = dummyLetter.letters;\r\n  let currLetter;\r\n  let [dbLetter, setDbLetter] = useState([]);\r\n  let [accessToken, setAccessToken] = useState(\"\");\r\n\r\n  const getCookie = () => {\r\n    let cookie = document.cookie.split(\";\");\r\n    let cookieArr = [];\r\n    cookie.map((e) => {\r\n      let c = e.split(\"=\");\r\n      cookieArr.push(c);\r\n    });\r\n    setAccessToken(cookieArr[2][1]);\r\n  };\r\n\r\n  const getLetter = async () => {\r\n    await axios\r\n      .get(\"http://localhost:8000/letter/postbox/\", {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((res) => {\r\n        setDbLetter([...res.data]);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n\r\n    dbLetter.map((l) => {\r\n      if (l.id === letterId) {\r\n        currLetter = l;\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCookie();\r\n    getLetter();\r\n  }, []);\r\n\r\n  // letters.map((l) => {\r\n  //   if (l.id === letterId) {\r\n  //     currLetter = l;\r\n  //     l.isOpend = true;\r\n  //   }\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <h1>편지가 도착했어요</h1>\r\n      <button onClick={handleGoBack}>뒤로 가기</button>\r\n      <br />\r\n      <p>편지와 사진이 들어있네요!</p>\r\n      <p>보고 싶은 걸 눌러주세요.</p>\r\n      <br />\r\n      <br />\r\n      <Link to={`/detail/${currLetter.id}/bottle`}>\r\n        <button>편지</button>\r\n      </Link>\r\n      <Link to={`/detail/${currLetter.id}/photo`}>\r\n        <button>카메라</button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenGift;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\OpenBottle.js",["158","159","160","161"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport dummyLetter from \"../letterbox/dummy/dummyLetter.json\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst OpenBottle = () => {\r\n  // 뒤로 가기\r\n  const navigate = useNavigate();\r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  let currUrl = window.document.location.href;\r\n  let urlArr = currUrl.split(\"/\");\r\n  let letterId = parseInt(urlArr[urlArr.length - 2]);\r\n\r\n  let letters = dummyLetter.letters;\r\n  let currLetter;\r\n\r\n  let [dbLetter, setDbLetter] = useState([]);\r\n  let [accessToken, setAccessToken] = useState(\"\");\r\n\r\n  const getCookie = () => {\r\n    let cookie = document.cookie.split(\";\");\r\n    let cookieArr = [];\r\n    cookie.map((e) => {\r\n      let c = e.split(\"=\");\r\n      cookieArr.push(c);\r\n    });\r\n    setAccessToken(cookieArr[2][1]);\r\n  };\r\n\r\n  const getLetter = async () => {\r\n    await axios\r\n      .get(\"http://localhost:8000/letter/postbox/\", {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((res) => {\r\n        setDbLetter([...res.data]);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n\r\n    dbLetter.map((l) => {\r\n      if (l.id === letterId) {\r\n        currLetter = l;\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCookie();\r\n    getLetter();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>편지가 도착했어요</h1>\r\n      <button onClick={handleGoBack}>뒤로 가기</button>\r\n      <br />\r\n      <p>To. {currLetter.to_name}</p>\r\n      <p>{currLetter.message}</p>\r\n      <p>From. {currLetter.from_name}</p>\r\n      <br />\r\n      <button>새로운 편지 하러 가기</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenBottle;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\ReadingLetter.js",["162"],[],"import LetterOpen from \"./LetterOpen\";\r\nimport LetterClose from \"./LetterClose\";\r\nimport dummyLetter from \"../letterbox/dummy/dummyLetter.json\";\r\n\r\nconst ReadingLetter = () => {\r\n  let currUrl = window.document.location.href;\r\n  let urlArr = currUrl.split(\"/\");\r\n  let letterId = parseInt(urlArr[urlArr.length - 1]);\r\n\r\n  let letters = dummyLetter.letters;\r\n  let currLetter;\r\n\r\n  letters.map((l) => {\r\n    if (l.id === letterId) {\r\n      currLetter = l;\r\n    }\r\n  });\r\n\r\n  return <>{currLetter.dday > 0 ? <LetterClose /> : <LetterOpen />}</>;\r\n};\r\n\r\nexport default ReadingLetter;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\letterbox\\LetterBox_read.js",["163","164","165","166","167","168"],[],"import new_dummy from \"./dummy/new_dummy.json\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport LetterBoxNav from \"./LetterBoxNav\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport { BsFillPersonFill, BsLink45Deg } from \"react-icons/bs\";\r\n\r\nconst url = \"/img/background.png\";\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(${url});\r\n  background-repeat: no-repeat;\r\n  background-origin: padding-box;\r\n  background-size: cover;\r\n`;\r\nconst Title = styled.p`\r\n  position: relative;\r\n  width: 4.563rem;\r\n  height: 2rem;\r\n  left: 1.5rem;\r\n  top: 5.625rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n\r\n  letter-spacing: 0.02rem;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst Letter = styled.div`\r\n  position: relative;\r\n  width: 19.25rem;\r\n  height: 3.625rem;\r\n  left: 1.688rem;\r\n  top: 1rem;\r\n`;\r\n\r\nconst LetterTitle = styled.p`\r\n  position: relative;\r\n  height: 1.813rem;\r\n  left: 4.2rem;\r\n  top: -2.625rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  line-height: 1.813rem;\r\n  /* identical to box height */\r\n\r\n  color: #ffffff;\r\n\r\n  /* 기본 그림자 */\r\n\r\n  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst LetterPeriod = styled.p`\r\n  position: relative;\r\n  height: 1.813rem;\r\n  left: 4.2rem;\r\n  top: -6.5rem;\r\n  margin: 0;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.1rem;\r\n  line-height: 1.813rem;\r\n  /* identical to box height */\r\n\r\n  color: #ffffff;\r\n\r\n  /* 기본 그림자 */\r\n`;\r\n\r\nconst NewLetterBtn = styled.button`\r\n  position: relative;\r\n  width: 23.875rem;\r\n  height: 3.563rem;\r\n  top: 29rem;\r\n\r\n  background: rgba(50, 50, 50, 0.7);\r\n  border: 0.075rem solid #ffffff;\r\n  box-shadow: 0px 0.25rem 1.5rem -0.063rem rgba(0, 0, 0, 0.2);\r\n  backdrop-filter: blur(0.625rem);\r\n\r\n  border-radius: 0.625rem;\r\n`;\r\n\r\nconst NewLetterTxt = styled.p`\r\n  position: relative;\r\n  width: 12.188rem;\r\n  height: 1.5rem;\r\n  top: 32.8rem;\r\n  z-index: 3;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  color: #ffffff;\r\n`;\r\n\r\nconst ClosedBottle = styled.img`\r\n  position: relative;\r\n  width: 2.938rem;\r\n  height: 58px;\r\n  top: 2.5rem;\r\n`;\r\n\r\nconst LetterBoxRead = () => {\r\n  // 백 없이 작업 (더미)\r\n  let openedLetters = [new_dummy];\r\n  openedLetters.map((e) => {\r\n    let open = e.openAt.split(\"T\")[0].split(\"-\");\r\n    e.openYear = open[0];\r\n    e.openMonth = open[1];\r\n    e.openDate = open[2];\r\n\r\n    let send = e.sendAt.split(\"T\")[0].split(\"-\");\r\n    e.sendYear = send[0];\r\n    e.sendMonth = send[1];\r\n    e.sendDate = send[2];\r\n  });\r\n\r\n  // let [dbLetter, setDbLetter] = useState([]);\r\n  // let [accessToken, setAccessToken] = useState(\"\");\r\n\r\n  // const getCookie = () => {\r\n  //   let cookie = document.cookie.split(\";\");\r\n  //   let cookieArr = [];\r\n  //   cookie.map((e) => {\r\n  //     let c = e.split(\"=\");\r\n  //     cookieArr.push(c);\r\n  //   });\r\n  //   setAccessToken(cookieArr[2][1]);\r\n  // };\r\n\r\n  // const getLetter = async () => {\r\n  //   await axios\r\n  //     .get(\"http://localhost:8000/letter/postbox/\", {\r\n  //       headers: { Authorization: `Bearer ${accessToken}` },\r\n  //     })\r\n  //     .then((res) => {\r\n  //       setDbLetter([...res.data]);\r\n  //     })\r\n  //     .catch(function (err) {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  // dbLetter.map((e) => {\r\n  //   let open = e.openAt.split(\"T\")[0].split(\"-\");\r\n  //   e.openYear = open[0];\r\n  //   e.openMonth = open[1];\r\n  //   e.openDate = open[2];\r\n\r\n  //   let send = e.sendAt.split(\"T\")[0].split(\"-\");\r\n  //   e.sendYear = send[0];\r\n  //   e.sendMonth = send[1];\r\n  //   e.sendDate = send[2];\r\n  // });\r\n\r\n  // // console.log(dbLetter);\r\n\r\n  // useEffect(() => {\r\n  //   getCookie();\r\n  //   getLetter();\r\n  // }, []);\r\n\r\n  // let openedLetters = [];\r\n  // dbLetter.map((l) => {\r\n  //   if (l.isOpend === true) {\r\n  //     openedLetters.push(l);\r\n  //   }\r\n  // });\r\n\r\n  // console.log(openedLetters);\r\n\r\n  //링크 공유하기\r\n  let url = document.location.href;\r\n  const onShareClick = (e) => {\r\n    let shareUrl = url + \"/\" + e.target.id;\r\n    console.log(shareUrl);\r\n    let textArea = document.createElement(\"textarea\");\r\n    document.body.appendChild(textArea);\r\n    textArea.value = shareUrl;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n    alert(\"링크가 복사되었습니다.\");\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const goBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>편지함</Title>\r\n      <AiFillHome\r\n        onClick={() => navigate(\"/\")}\r\n        style={{\r\n          color: \"white\",\r\n          position: \"relative\",\r\n          width: \"2.125rem\",\r\n          height: \"2.125rem\",\r\n          left: \"19.3rem\",\r\n          top: \"2rem\",\r\n        }}\r\n      />\r\n      <BsFillPersonFill\r\n        onClick={() => navigate(\"/mypage\")}\r\n        style={{\r\n          color: \"white\",\r\n          position: \"relative\",\r\n          width: \"2.125rem\",\r\n          height: \"2.125rem\",\r\n          left: \"20rem\",\r\n          top: \"2rem\",\r\n        }}\r\n      />\r\n\r\n      <LetterBoxNav />\r\n\r\n      {openedLetters.map((letter) => (\r\n        <Letter key={letter.id} id={letter.id}>\r\n          {letter.isOpend === true ? (\r\n            <img style={{ width: \"10%\" }} src=\"/img/open.png\" alt=\"open\" />\r\n          ) : (\r\n            <ClosedBottle src=\"/img/letter.png\" alt=\"close\" id={letter.id} />\r\n          )}\r\n\r\n          {letter.to_name !== letter.from_name ? (\r\n            <LetterTitle id={letter.id}>\r\n              D - {letter.dday} {letter.to_name}에게\r\n            </LetterTitle>\r\n          ) : (\r\n            <LetterTitle id={letter.id}>나에게</LetterTitle>\r\n          )}\r\n\r\n          {letter.to_name !== letter.from_name ? (\r\n            <BsLink45Deg\r\n              style={{\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                width: \"2.125rem\",\r\n                height: \"2.125rem\",\r\n                left: \"20rem\",\r\n                top: \"-6rem\",\r\n              }}\r\n              onClick={onShareClick}\r\n              id={letter.id}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          <LetterPeriod>\r\n            {`${letter.sendYear}.${letter.sendMonth}.${letter.sendDate}.`} →{\" \"}\r\n            {`${letter.openYear}.${letter.openMonth}.${letter.openDate}.`}\r\n          </LetterPeriod>\r\n        </Letter>\r\n      ))}\r\n      <center>\r\n        <NewLetterTxt>새로운 편지하러 가기</NewLetterTxt>\r\n        <NewLetterBtn></NewLetterBtn>\r\n      </center>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LetterBoxRead;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\OpenPhoto.js",["169","170","171","172"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport dummyLetter from \"../letterbox/dummy/dummyLetter.json\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst OpenPhoto = () => {\r\n  // 뒤로 가기\r\n  const navigate = useNavigate();\r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  let currUrl = window.document.location.href;\r\n  let urlArr = currUrl.split(\"/\");\r\n  let letterId = parseInt(urlArr[urlArr.length - 2]);\r\n\r\n  let letters = dummyLetter.letters;\r\n  let currLetter;\r\n\r\n  let [dbLetter, setDbLetter] = useState([]);\r\n  let [accessToken, setAccessToken] = useState(\"\");\r\n\r\n  const getCookie = () => {\r\n    let cookie = document.cookie.split(\";\");\r\n    let cookieArr = [];\r\n    cookie.map((e) => {\r\n      let c = e.split(\"=\");\r\n      cookieArr.push(c);\r\n    });\r\n    setAccessToken(cookieArr[2][1]);\r\n  };\r\n\r\n  const getLetter = async () => {\r\n    await axios\r\n      .get(\"http://localhost:8000/letter/postbox/\", {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((res) => {\r\n        setDbLetter([...res.data]);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n\r\n    dbLetter.map((l) => {\r\n      if (l.id === letterId) {\r\n        currLetter = l;\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCookie();\r\n    getLetter();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>편지가 도착했어요</h1>\r\n      <button onClick={handleGoBack}>뒤로 가기</button>\r\n      <br />\r\n      <img alt=\"gift_photo\" src={currLetter.image} />\r\n      <br />\r\n      <button>새로운 편지 하러 가기</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenPhoto;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\letterbox\\LetterBoxNav.js",["173"],[],"import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  position: relative;\r\n  top: 1.5rem;\r\n`;\r\nconst Tap1 = styled.p`\r\n  position: relative;\r\n  width: 6.75rem;\r\n  height: 1.5rem;\r\n  left: -2.5rem;\r\n  top: 0.5rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst Tap2 = styled.p`\r\n  position: relative;\r\n  width: 6.75rem;\r\n  height: 1.5rem;\r\n  left: -4.7rem;\r\n  top: 0.5rem;\r\n\r\n  font-family: \"MapoGoldenPier\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n\r\n  color: #ffffff;\r\n\r\n  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst Line1 = styled.div`\r\n  position: relative;\r\n  width: 6.75rem;\r\n  height: 0px;\r\n  left: -2.5rem;\r\n  top: -0.25rem;\r\n\r\n  border: 0.063rem solid #ffffff;\r\n`;\r\nconst Line2 = styled.div`\r\n  position: relative;\r\n  width: 6.75rem;\r\n  height: 0px;\r\n  left: -4.7rem;\r\n  top: -0.25rem;\r\n\r\n  border: 0.063rem solid #ffffff;\r\n`;\r\n\r\nconst LetterBoxNav = () => {\r\n  const currUrl = window.document.location.href;\r\n  const urlArr = currUrl.split(\"/\");\r\n  const thisPage = urlArr[urlArr.length - 1];\r\n  console.log(thisPage);\r\n  return (\r\n    <Nav>\r\n      <Link\r\n        to=\"/letterbox/unread\"\r\n        style={{ color: \"black\", textDecoration: \"none\" }}\r\n      >\r\n        <Tap1>기다리는 중</Tap1>\r\n        {thisPage === \"unread\" ? <Line1></Line1> : <></>}\r\n      </Link>\r\n      <Link\r\n        to=\"/letterbox/read\"\r\n        style={{ color: \"black\", textDecoration: \"none\" }}\r\n      >\r\n        <Tap2>읽은 편지함</Tap2>\r\n        {thisPage === \"read\" ? <Line2></Line2> : <></>}\r\n      </Link>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default LetterBoxNav;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\LetterOpen.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\reading\\LetterClose.js",["174"],[],"import dummyLetter from \"../letterbox/dummy/dummyLetter.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LetterClose = () => {\r\n  let currUrl = window.document.location.href;\r\n  let urlArr = currUrl.split(\"/\");\r\n  let letterId = parseInt(urlArr[urlArr.length - 1]);\r\n\r\n  let letters = dummyLetter.letters;\r\n  let currLetter;\r\n\r\n  letters.map((l) => {\r\n    if (l.id === letterId) {\r\n      currLetter = l;\r\n    }\r\n  });\r\n\r\n  //링크 공유하기\r\n  let url = document.location.href;\r\n  const onShareClick = () => {\r\n    let textArea = document.createElement(\"textarea\");\r\n    document.body.appendChild(textArea);\r\n    textArea.value = url;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n    alert(\"링크가 복사되었습니다.\");\r\n  };\r\n\r\n  // 뒤로 가기\r\n  const navigate = useNavigate();\r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>편지를 기다리는 중..</h1>\r\n      <button onClick={handleGoBack}>뒤로 가기</button>\r\n      {currLetter.sender === currLetter.recipient ? (\r\n        <></>\r\n      ) : (\r\n        <button onClick={onShareClick}>공유하기 🔗</button>\r\n      )}\r\n\r\n      <br />\r\n      <h4>도착까지 D - {currLetter.dday}</h4>\r\n      {currLetter.sender === currLetter.recipient ? (\r\n        <>\r\n          <p>\r\n            {currLetter.sendAt[0]}년 {currLetter.sendAt[1]}월{\" \"}\r\n            {currLetter.sendAt[2]}일에 당신이 보낸 유리병이 아직 세상을 여행하고\r\n            있어요.\r\n          </p>\r\n          <p>유리병이 도착하면 이메일로 알려드릴게요!</p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p>\r\n            {currLetter.sendAt[0]}년 {currLetter.sendAt[1]}월{\" \"}\r\n            {currLetter.sendAt[2]}일,\r\n          </p>\r\n          <p>\r\n            {currLetter.sender} 님이 {currLetter.recipient} 님께 보낸 유리병이\r\n            아직 세상을 여행하고 있어요.\r\n          </p>\r\n          <p>\r\n            아래에 이메일을 남겨주시면 유리병이 도착할 때 이메일로 알려드릴게요!\r\n          </p>\r\n          <form>\r\n            <input type=\"email\" />\r\n            <button type=\"submit\">남기기</button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LetterClose;\r\n","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write3.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write2.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write4.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write1.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write6.js",["175"],[],"import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst useConfirm = (message = null, onConfirm, onCancel) => {\r\n    if (!onConfirm || typeof onConfirm !== \"function\") {\r\n        return;\r\n    }\r\n    if (onCancel && typeof onCancel !== \"function\") {\r\n        return;\r\n    }\r\n\r\n    const confirmAction = () => {\r\n        if (window.confirm(message)) {\r\n            onConfirm();\r\n        } else {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    return confirmAction;\r\n\r\n};\r\n\r\nfunction Write6() {\r\n    const navigate = useNavigate();\r\n\r\n    let currUrl = window.document.location.href;\r\n    let urlArr = currUrl.split('/');\r\n    let who = urlArr[urlArr.length - 1];\r\n    console.log(who);\r\n\r\n    function Navigate() {\r\n        console.log(who);\r\n        if (who ==='tome'){\r\n            navigate(`/write/write7/tome`);\r\n            console.log('tome write3로 갑시다')\r\n        }\r\n        else if (who === 'toyou'){\r\n            navigate(`/write/write7/toyou`);\r\n            console.log('toyou write3로 갑시다')\r\n        }\r\n    }\r\n\r\n    const deleteConfirm = () => console.log(\"삭제했습니다.\");\r\n    const cancelConfirm = () => console.log(\"취소했습니다.\");\r\n    const confirmDelete = useConfirm(\r\n    \"편지를 보낸 후에는 수정 및 삭제가 불가능합니다.편지를 보내시겠어요?\",\r\n    deleteConfirm,\r\n    cancelConfirm\r\n    \r\n);\r\n    return (\r\n        <>\r\n        {who === 'tome' ? <h2>나에게 편지 쓰는 중...(4/4)</h2> :<h2>너에게 편지쓰는 중...(5/5)</h2>}\r\n\r\n        <h3>소중한 마음을 담아<br></br>편지를 작성해주세요.</h3>\r\n\r\n        <div>\r\n        \r\n        <span>To. </span><input type=\"text\" required maxLength=\"20\"></input><br></br>\r\n        <textarea type=\"text\" rows=\"50\" cols=\"100\" required maxLength=\"1000\"></textarea><br></br>\r\n        <span>From. </span><input type=\"text\" required maxLength=\"20\"></input>\r\n        </div>\r\n        \r\n        <input type=\"submit\" value=\"편지 보내기\" onClick={confirmDelete}></input>\r\n        \r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Write6;","C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\write5.js",[],[],"C:\\Users\\Ditto\\Documents\\DearOneYear\\FE\\src\\routes\\write\\Confirm1.js",[],[],{"ruleId":"176","severity":1,"message":"177","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":138,"column":20,"nodeType":"182","messageId":"183","endLine":138,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":145,"column":23,"nodeType":"182","messageId":"183","endLine":145,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":157,"column":24,"nodeType":"186","messageId":"187","endLine":157,"endColumn":25},{"ruleId":"188","severity":1,"message":"189","line":236,"column":6,"nodeType":"190","endLine":236,"endColumn":8,"suggestions":"191"},{"ruleId":"176","severity":1,"message":"192","line":89,"column":7,"nodeType":"178","messageId":"179","endLine":89,"endColumn":14},{"ruleId":"188","severity":1,"message":"193","line":129,"column":6,"nodeType":"190","endLine":129,"endColumn":8,"suggestions":"194"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":14},{"ruleId":"176","severity":1,"message":"195","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":17},{"ruleId":"176","severity":1,"message":"196","line":153,"column":8,"nodeType":"178","messageId":"179","endLine":153,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":158,"column":20,"nodeType":"182","messageId":"183","endLine":158,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":178,"column":20,"nodeType":"182","messageId":"183","endLine":178,"endColumn":22},{"ruleId":"188","severity":1,"message":"197","line":195,"column":6,"nodeType":"190","endLine":195,"endColumn":8,"suggestions":"198"},{"ruleId":"180","severity":1,"message":"181","line":198,"column":20,"nodeType":"182","messageId":"183","endLine":198,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":160,"column":22,"nodeType":"182","messageId":"183","endLine":160,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":168,"column":23,"nodeType":"182","messageId":"183","endLine":168,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":226,"column":5,"nodeType":"201","messageId":"202","endLine":229,"endColumn":6},{"ruleId":"199","severity":1,"message":"200","line":230,"column":5,"nodeType":"201","messageId":"202","endLine":233,"endColumn":6},{"ruleId":"188","severity":1,"message":"203","line":239,"column":6,"nodeType":"190","endLine":239,"endColumn":8,"suggestions":"204"},{"ruleId":"176","severity":1,"message":"205","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":25,"column":20,"nodeType":"182","messageId":"183","endLine":25,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":44,"column":22,"nodeType":"182","messageId":"183","endLine":44,"endColumn":24},{"ruleId":"188","severity":1,"message":"197","line":54,"column":6,"nodeType":"190","endLine":54,"endColumn":8,"suggestions":"206"},{"ruleId":"176","severity":1,"message":"207","line":17,"column":7,"nodeType":"178","messageId":"179","endLine":17,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":26,"column":20,"nodeType":"182","messageId":"183","endLine":26,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":45,"column":22,"nodeType":"182","messageId":"183","endLine":45,"endColumn":24},{"ruleId":"188","severity":1,"message":"197","line":55,"column":6,"nodeType":"190","endLine":55,"endColumn":8,"suggestions":"208"},{"ruleId":"180","severity":1,"message":"181","line":13,"column":19,"nodeType":"182","messageId":"183","endLine":13,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"209","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":18},{"ruleId":"176","severity":1,"message":"210","line":4,"column":20,"nodeType":"178","messageId":"179","endLine":4,"endColumn":29},{"ruleId":"176","severity":1,"message":"211","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":13},{"ruleId":"180","severity":1,"message":"181","line":134,"column":25,"nodeType":"182","messageId":"183","endLine":134,"endColumn":27},{"ruleId":"176","severity":1,"message":"212","line":215,"column":9,"nodeType":"178","messageId":"179","endLine":215,"endColumn":15},{"ruleId":"176","severity":1,"message":"207","line":17,"column":7,"nodeType":"178","messageId":"179","endLine":17,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":26,"column":20,"nodeType":"182","messageId":"183","endLine":26,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":45,"column":22,"nodeType":"182","messageId":"183","endLine":45,"endColumn":24},{"ruleId":"188","severity":1,"message":"197","line":55,"column":6,"nodeType":"190","endLine":55,"endColumn":8,"suggestions":"213"},{"ruleId":"176","severity":1,"message":"210","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":12,"column":19,"nodeType":"182","messageId":"183","endLine":12,"endColumn":21},{"ruleId":"176","severity":1,"message":"214","line":32,"column":14,"nodeType":"178","messageId":"179","endLine":32,"endColumn":22},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCookie'. Either include it or remove the dependency array.","ArrayExpression",["215"],"'currUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'code' and 'loginHandler'. Either include them or remove the dependency array.",["216"],"'new_dummy' is defined but never used.","'accessToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLetter'. Either include it or remove the dependency array.",["217"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'getCookie' and 'userCheck'. Either include them or remove the dependency array.",["218"],"'dummyLetter' is defined but never used.",["219"],"'letters' is assigned a value but never used.",["220"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'goBack' is assigned a value but never used.",["221"],"'Navigate' is defined but never used.",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"226","fix":"230"},{"desc":"226","fix":"231"},{"desc":"226","fix":"232"},"Update the dependencies array to be: [getCookie]",{"range":"233","text":"234"},"Update the dependencies array to be: [code, loginHandler]",{"range":"235","text":"236"},"Update the dependencies array to be: [getLetter]",{"range":"237","text":"238"},"Update the dependencies array to be: [getCookie, userCheck]",{"range":"239","text":"240"},{"range":"241","text":"238"},{"range":"242","text":"238"},{"range":"243","text":"238"},[5223,5225],"[getCookie]",[3176,3178],"[code, loginHandler]",[4293,4295],"[getLetter]",[4958,4960],"[getCookie, userCheck]",[1358,1360],[1353,1355],[1352,1354]]