"use strict";

Object.defineProperty(exports, "t", {
    value: true
});

exports.default = void 0;

<<<<<<< HEAD
var _TreeNode = require("./TreeNode");

var _ContainerBase = require("../../ContainerBase");

var _throwError = require("../../../utils/throwError");

class TreeContainer extends _ContainerBase.Container {
    constructor(e = function(e, t) {
        if (e < t) return -1;
        if (e > t) return 1;
        return 0;
    }, t = false) {
        super();
        this.rr = undefined;
        this.v = e;
        if (t) {
            this.re = _TreeNode.TreeNodeEnableIndex;
            this.M = function(e, t, i) {
                const s = this.ne(e, t, i);
                if (s) {
                    let e = s.tt;
                    while (e !== this.h) {
                        e.rt += 1;
                        e = e.tt;
                    }
                    const t = this.he(s);
                    if (t) {
                        const {parentNode: e, grandParent: i, curNode: s} = t;
                        e.ie();
                        i.ie();
                        s.ie();
                    }
                }
                return this.i;
            };
            this.K = function(e) {
                let t = this.fe(e);
                while (t !== this.h) {
                    t.rt -= 1;
=======
var _ContainerBase = require("../../ContainerBase");

var _TreeNode = require("./TreeNode");

class TreeContainer extends _ContainerBase.Container {
    constructor(e = ((e, t) => {
        if (e < t) return -1;
        if (e > t) return 1;
        return 0;
    }), t = false) {
        super();
        this.X = undefined;
        this.ie = (e, t) => {
            if (e === undefined) return false;
            const i = this.ie(e.U, t);
            if (i) return true;
            if (t(e)) return true;
            return this.ie(e.J, t);
        };
        this.p = e;
        if (t) {
            this.ne = _TreeNode.TreeNodeEnableIndex;
            this.ee = function(e, t, i) {
                const s = this.he(e, t, i);
                if (s) {
                    let e = s.tt;
                    while (e !== this.S) {
                        e.et += 1;
                        e = e.tt;
                    }
                    const t = this.fe(s);
                    if (t) {
                        const {parentNode: e, grandParent: i, curNode: s} = t;
                        e.recount();
                        i.recount();
                        s.recount();
                    }
                }
            };
            this.ue = function(e) {
                let t = this.le(e);
                while (t !== this.S) {
                    t.et -= 1;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                    t = t.tt;
                }
            };
        } else {
<<<<<<< HEAD
            this.re = _TreeNode.TreeNode;
            this.M = function(e, t, i) {
                const s = this.ne(e, t, i);
                if (s) this.he(s);
                return this.i;
            };
            this.K = this.fe;
        }
        this.h = new this.re;
    }
    $(e, t) {
        let i = this.h;
        while (e) {
            const s = this.v(e.u, t);
            if (s < 0) {
                e = e.Z;
            } else if (s > 0) {
                i = e;
                e = e.Y;
            } else return e;
        }
        return i;
    }
    er(e, t) {
        let i = this.h;
        while (e) {
            const s = this.v(e.u, t);
            if (s <= 0) {
                e = e.Z;
            } else {
                i = e;
                e = e.Y;
            }
        }
        return i;
    }
    tr(e, t) {
        let i = this.h;
        while (e) {
            const s = this.v(e.u, t);
            if (s < 0) {
                i = e;
                e = e.Z;
            } else if (s > 0) {
                e = e.Y;
            } else return e;
        }
        return i;
    }
    sr(e, t) {
        let i = this.h;
        while (e) {
            const s = this.v(e.u, t);
            if (s < 0) {
                i = e;
                e = e.Z;
            } else {
                e = e.Y;
            }
        }
        return i;
    }
    ue(e) {
        while (true) {
            const t = e.tt;
            if (t === this.h) return;
            if (e.ee === 1) {
                e.ee = 0;
                return;
            }
            if (e === t.Y) {
                const i = t.Z;
                if (i.ee === 1) {
                    i.ee = 0;
                    t.ee = 1;
                    if (t === this.rr) {
                        this.rr = t.te();
                    } else t.te();
                } else {
                    if (i.Z && i.Z.ee === 1) {
                        i.ee = t.ee;
                        t.ee = 0;
                        i.Z.ee = 0;
                        if (t === this.rr) {
                            this.rr = t.te();
                        } else t.te();
                        return;
                    } else if (i.Y && i.Y.ee === 1) {
                        i.ee = 1;
                        i.Y.ee = 0;
                        i.se();
                    } else {
                        i.ee = 1;
=======
            this.ne = _TreeNode.TreeNode;
            this.ee = function(e, t, i) {
                const s = this.he(e, t, i);
                if (s) this.fe(s);
            };
            this.ue = this.le;
        }
        this.S = new this.ne;
    }
    W(e, t) {
        let i;
        while (e) {
            const s = this.p(e.T, t);
            if (s < 0) {
                e = e.J;
            } else if (s > 0) {
                i = e;
                e = e.U;
            } else return e;
        }
        return i === undefined ? this.S : i;
    }
    Y(e, t) {
        let i;
        while (e) {
            const s = this.p(e.T, t);
            if (s <= 0) {
                e = e.J;
            } else {
                i = e;
                e = e.U;
            }
        }
        return i === undefined ? this.S : i;
    }
    Z(e, t) {
        let i;
        while (e) {
            const s = this.p(e.T, t);
            if (s < 0) {
                i = e;
                e = e.J;
            } else if (s > 0) {
                e = e.U;
            } else return e;
        }
        return i === undefined ? this.S : i;
    }
    $(e, t) {
        let i;
        while (e) {
            const s = this.p(e.T, t);
            if (s < 0) {
                i = e;
                e = e.J;
            } else {
                e = e.U;
            }
        }
        return i === undefined ? this.S : i;
    }
    oe(e) {
        while (true) {
            const t = e.tt;
            if (t === this.S) return;
            if (e.se === 1) {
                e.se = 0;
                return;
            }
            if (e === t.U) {
                const i = t.J;
                if (i.se === 1) {
                    i.se = 0;
                    t.se = 1;
                    if (t === this.X) {
                        this.X = t.rotateLeft();
                    } else t.rotateLeft();
                } else {
                    if (i.J && i.J.se === 1) {
                        i.se = t.se;
                        t.se = 0;
                        i.J.se = 0;
                        if (t === this.X) {
                            this.X = t.rotateLeft();
                        } else t.rotateLeft();
                        return;
                    } else if (i.U && i.U.se === 1) {
                        i.se = 1;
                        i.U.se = 0;
                        i.rotateRight();
                    } else {
                        i.se = 1;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                        e = t;
                    }
                }
            } else {
<<<<<<< HEAD
                const i = t.Y;
                if (i.ee === 1) {
                    i.ee = 0;
                    t.ee = 1;
                    if (t === this.rr) {
                        this.rr = t.se();
                    } else t.se();
                } else {
                    if (i.Y && i.Y.ee === 1) {
                        i.ee = t.ee;
                        t.ee = 0;
                        i.Y.ee = 0;
                        if (t === this.rr) {
                            this.rr = t.se();
                        } else t.se();
                        return;
                    } else if (i.Z && i.Z.ee === 1) {
                        i.ee = 1;
                        i.Z.ee = 0;
                        i.te();
                    } else {
                        i.ee = 1;
=======
                const i = t.U;
                if (i.se === 1) {
                    i.se = 0;
                    t.se = 1;
                    if (t === this.X) {
                        this.X = t.rotateRight();
                    } else t.rotateRight();
                } else {
                    if (i.U && i.U.se === 1) {
                        i.se = t.se;
                        t.se = 0;
                        i.U.se = 0;
                        if (t === this.X) {
                            this.X = t.rotateRight();
                        } else t.rotateRight();
                        return;
                    } else if (i.J && i.J.se === 1) {
                        i.se = 1;
                        i.J.se = 0;
                        i.rotateLeft();
                    } else {
                        i.se = 1;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                        e = t;
                    }
                }
            }
        }
    }
<<<<<<< HEAD
    fe(e) {
        if (this.i === 1) {
            this.clear();
            return this.h;
        }
        let t = e;
        while (t.Y || t.Z) {
            if (t.Z) {
                t = t.Z;
                while (t.Y) t = t.Y;
            } else {
                t = t.Y;
            }
            [e.u, t.u] = [ t.u, e.u ];
            [e.l, t.l] = [ t.l, e.l ];
            e = t;
        }
        if (this.h.Y === t) {
            this.h.Y = t.tt;
        } else if (this.h.Z === t) {
            this.h.Z = t.tt;
        }
        this.ue(t);
        const i = t.tt;
        if (t === i.Y) {
            i.Y = undefined;
        } else i.Z = undefined;
        this.i -= 1;
        this.rr.ee = 0;
        return i;
    }
    oe(e, t) {
        if (e === undefined) return false;
        const i = this.oe(e.Y, t);
        if (i) return true;
        if (t(e)) return true;
        return this.oe(e.Z, t);
    }
    he(e) {
        while (true) {
            const t = e.tt;
            if (t.ee === 0) return;
            const i = t.tt;
            if (t === i.Y) {
                const s = i.Z;
                if (s && s.ee === 1) {
                    s.ee = t.ee = 0;
                    if (i === this.rr) return;
                    i.ee = 1;
                    e = i;
                    continue;
                } else if (e === t.Z) {
                    e.ee = 0;
                    if (e.Y) e.Y.tt = t;
                    if (e.Z) e.Z.tt = i;
                    t.Z = e.Y;
                    i.Y = e.Z;
                    e.Y = t;
                    e.Z = i;
                    if (i === this.rr) {
                        this.rr = e;
                        this.h.tt = e;
                    } else {
                        const t = i.tt;
                        if (t.Y === i) {
                            t.Y = e;
                        } else t.Z = e;
=======
    le(e) {
        if (this.o === 1) {
            this.clear();
            return this.S;
        }
        let t = e;
        while (t.U || t.J) {
            if (t.J) {
                t = t.J;
                while (t.U) t = t.U;
            } else {
                t = t.U;
            }
            [e.T, t.T] = [ t.T, e.T ];
            [e.L, t.L] = [ t.L, e.L ];
            e = t;
        }
        if (this.S.U === t) {
            this.S.U = t.tt;
        } else if (this.S.J === t) {
            this.S.J = t.tt;
        }
        this.oe(t);
        const i = t.tt;
        if (t === i.U) {
            i.U = undefined;
        } else i.J = undefined;
        this.o -= 1;
        this.X.se = 0;
        return i;
    }
    fe(e) {
        while (true) {
            const t = e.tt;
            if (t.se === 0) return;
            const i = t.tt;
            if (t === i.U) {
                const s = i.J;
                if (s && s.se === 1) {
                    s.se = t.se = 0;
                    if (i === this.X) return;
                    i.se = 1;
                    e = i;
                    continue;
                } else if (e === t.J) {
                    e.se = 0;
                    if (e.U) e.U.tt = t;
                    if (e.J) e.J.tt = i;
                    t.J = e.U;
                    i.U = e.J;
                    e.U = t;
                    e.J = i;
                    if (i === this.X) {
                        this.X = e;
                        this.S.tt = e;
                    } else {
                        const t = i.tt;
                        if (t.U === i) {
                            t.U = e;
                        } else t.J = e;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                    }
                    e.tt = i.tt;
                    t.tt = e;
                    i.tt = e;
<<<<<<< HEAD
                    i.ee = 1;
=======
                    i.se = 1;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                    return {
                        parentNode: t,
                        grandParent: i,
                        curNode: e
                    };
                } else {
<<<<<<< HEAD
                    t.ee = 0;
                    if (i === this.rr) {
                        this.rr = i.se();
                    } else i.se();
                    i.ee = 1;
                }
            } else {
                const s = i.Y;
                if (s && s.ee === 1) {
                    s.ee = t.ee = 0;
                    if (i === this.rr) return;
                    i.ee = 1;
                    e = i;
                    continue;
                } else if (e === t.Y) {
                    e.ee = 0;
                    if (e.Y) e.Y.tt = i;
                    if (e.Z) e.Z.tt = t;
                    i.Z = e.Y;
                    t.Y = e.Z;
                    e.Y = i;
                    e.Z = t;
                    if (i === this.rr) {
                        this.rr = e;
                        this.h.tt = e;
                    } else {
                        const t = i.tt;
                        if (t.Y === i) {
                            t.Y = e;
                        } else t.Z = e;
=======
                    t.se = 0;
                    if (i === this.X) {
                        this.X = i.rotateRight();
                    } else i.rotateRight();
                    i.se = 1;
                }
            } else {
                const s = i.U;
                if (s && s.se === 1) {
                    s.se = t.se = 0;
                    if (i === this.X) return;
                    i.se = 1;
                    e = i;
                    continue;
                } else if (e === t.U) {
                    e.se = 0;
                    if (e.U) e.U.tt = i;
                    if (e.J) e.J.tt = t;
                    i.J = e.U;
                    t.U = e.J;
                    e.U = i;
                    e.J = t;
                    if (i === this.X) {
                        this.X = e;
                        this.S.tt = e;
                    } else {
                        const t = i.tt;
                        if (t.U === i) {
                            t.U = e;
                        } else t.J = e;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                    }
                    e.tt = i.tt;
                    t.tt = e;
                    i.tt = e;
<<<<<<< HEAD
                    i.ee = 1;
=======
                    i.se = 1;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                    return {
                        parentNode: t,
                        grandParent: i,
                        curNode: e
                    };
                } else {
<<<<<<< HEAD
                    t.ee = 0;
                    if (i === this.rr) {
                        this.rr = i.te();
                    } else i.te();
                    i.ee = 1;
=======
                    t.se = 0;
                    if (i === this.X) {
                        this.X = i.rotateLeft();
                    } else i.rotateLeft();
                    i.se = 1;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                }
            }
            return;
        }
    }
<<<<<<< HEAD
    ne(e, t, i) {
        if (this.rr === undefined) {
            this.i += 1;
            this.rr = new this.re(e, t);
            this.rr.ee = 0;
            this.rr.tt = this.h;
            this.h.tt = this.rr;
            this.h.Y = this.rr;
            this.h.Z = this.rr;
            return;
        }
        let s;
        const r = this.h.Y;
        const n = this.v(r.u, e);
        if (n === 0) {
            r.l = t;
            return;
        } else if (n > 0) {
            r.Y = new this.re(e, t);
            r.Y.tt = r;
            s = r.Y;
            this.h.Y = s;
        } else {
            const r = this.h.Z;
            const n = this.v(r.u, e);
            if (n === 0) {
                r.l = t;
                return;
            } else if (n < 0) {
                r.Z = new this.re(e, t);
                r.Z.tt = r;
                s = r.Z;
                this.h.Z = s;
            } else {
                if (i !== undefined) {
                    const r = i.o;
                    if (r !== this.h) {
                        const i = this.v(r.u, e);
                        if (i === 0) {
                            r.l = t;
                            return;
                        } else if (i > 0) {
                            const i = r.L();
                            const n = this.v(i.u, e);
                            if (n === 0) {
                                i.l = t;
                                return;
                            } else if (n < 0) {
                                s = new this.re(e, t);
                                if (i.Z === undefined) {
                                    i.Z = s;
                                    s.tt = i;
                                } else {
                                    r.Y = s;
=======
    he(e, t, i) {
        if (this.X === undefined) {
            this.o += 1;
            this.X = new this.ne(e, t);
            this.X.se = 0;
            this.X.tt = this.S;
            this.S.tt = this.X;
            this.S.U = this.X;
            this.S.J = this.X;
            return;
        }
        let s;
        const r = this.S.U;
        const n = this.p(r.T, e);
        if (n === 0) {
            r.L = t;
            return;
        } else if (n > 0) {
            r.U = new this.ne(e, t);
            r.U.tt = r;
            s = r.U;
            this.S.U = s;
        } else {
            const r = this.S.J;
            const n = this.p(r.T, e);
            if (n === 0) {
                r.L = t;
                return;
            } else if (n < 0) {
                r.J = new this.ne(e, t);
                r.J.tt = r;
                s = r.J;
                this.S.J = s;
            } else {
                if (i !== undefined) {
                    const r = i.I;
                    if (r !== this.S) {
                        const i = this.p(r.T, e);
                        if (i === 0) {
                            r.L = t;
                            return;
                        } else if (i > 0) {
                            const i = r.pre();
                            const n = this.p(i.T, e);
                            if (n === 0) {
                                i.L = t;
                                return;
                            } else if (n < 0) {
                                s = new this.ne(e, t);
                                if (i.J === undefined) {
                                    i.J = s;
                                    s.tt = i;
                                } else {
                                    r.U = s;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                                    s.tt = r;
                                }
                            }
                        }
                    }
                }
                if (s === undefined) {
<<<<<<< HEAD
                    s = this.rr;
                    while (true) {
                        const i = this.v(s.u, e);
                        if (i > 0) {
                            if (s.Y === undefined) {
                                s.Y = new this.re(e, t);
                                s.Y.tt = s;
                                s = s.Y;
                                break;
                            }
                            s = s.Y;
                        } else if (i < 0) {
                            if (s.Z === undefined) {
                                s.Z = new this.re(e, t);
                                s.Z.tt = s;
                                s = s.Z;
                                break;
                            }
                            s = s.Z;
                        } else {
                            s.l = t;
=======
                    s = this.X;
                    while (true) {
                        const i = this.p(s.T, e);
                        if (i > 0) {
                            if (s.U === undefined) {
                                s.U = new this.ne(e, t);
                                s.U.tt = s;
                                s = s.U;
                                break;
                            }
                            s = s.U;
                        } else if (i < 0) {
                            if (s.J === undefined) {
                                s.J = new this.ne(e, t);
                                s.J.tt = s;
                                s = s.J;
                                break;
                            }
                            s = s.J;
                        } else {
                            s.L = t;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                            return;
                        }
                    }
                }
            }
        }
<<<<<<< HEAD
        this.i += 1;
        return s;
    }
    I(e, t) {
        while (e) {
            const i = this.v(e.u, t);
            if (i < 0) {
                e = e.Z;
            } else if (i > 0) {
                e = e.Y;
            } else return e;
        }
        return e || this.h;
    }
    clear() {
        this.i = 0;
        this.rr = undefined;
        this.h.tt = undefined;
        this.h.Y = this.h.Z = undefined;
    }
    updateKeyByIterator(e, t) {
        const i = e.o;
        if (i === this.h) {
            (0, _throwError.throwIteratorAccessError)();
        }
        if (this.i === 1) {
            i.u = t;
            return true;
        }
        if (i === this.h.Y) {
            if (this.v(i.B().u, t) > 0) {
                i.u = t;
=======
        this.o += 1;
        return s;
    }
    clear() {
        this.o = 0;
        this.X = undefined;
        this.S.tt = undefined;
        this.S.U = this.S.J = undefined;
    }
    updateKeyByIterator(e, t) {
        const i = e.I;
        if (i === this.S) {
            throw new TypeError("Invalid iterator!");
        }
        if (this.o === 1) {
            i.T = t;
            return true;
        }
        if (i === this.S.U) {
            if (this.p(i.next().T, t) > 0) {
                i.T = t;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                return true;
            }
            return false;
        }
<<<<<<< HEAD
        if (i === this.h.Z) {
            if (this.v(i.L().u, t) < 0) {
                i.u = t;
=======
        if (i === this.S.J) {
            if (this.p(i.pre().T, t) < 0) {
                i.T = t;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                return true;
            }
            return false;
        }
<<<<<<< HEAD
        const s = i.L().u;
        if (this.v(s, t) >= 0) return false;
        const r = i.B().u;
        if (this.v(r, t) <= 0) return false;
        i.u = t;
        return true;
    }
    eraseElementByPos(e) {
        if (e < 0 || e > this.i - 1) {
            throw new RangeError;
        }
        let t = 0;
        const i = this;
        this.oe(this.rr, (function(s) {
            if (e === t) {
                i.K(s);
=======
        const s = i.pre().T;
        if (this.p(s, t) >= 0) return false;
        const r = i.next().T;
        if (this.p(r, t) <= 0) return false;
        i.T = t;
        return true;
    }
    eraseElementByPos(e) {
        if (e < 0 || e > this.o - 1) {
            throw new RangeError;
        }
        let t = 0;
        this.ie(this.X, (i => {
            if (e === t) {
                this.ue(i);
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
                return true;
            }
            t += 1;
            return false;
        }));
<<<<<<< HEAD
        return this.i;
    }
    eraseElementByKey(e) {
        if (this.i === 0) return false;
        const t = this.I(this.rr, e);
        if (t === this.h) return false;
        this.K(t);
        return true;
    }
    eraseElementByIterator(e) {
        const t = e.o;
        if (t === this.h) {
            (0, _throwError.throwIteratorAccessError)();
        }
        const i = t.Z === undefined;
        const s = e.iteratorType === 0;
        if (s) {
            if (i) e.next();
        } else {
            if (!i || t.Y === undefined) e.next();
        }
        this.K(t);
        return e;
    }
    forEach(e) {
        let t = 0;
        for (const i of this) e(i, t++, this);
    }
    getElementByPos(e) {
        if (e < 0 || e > this.i - 1) {
            throw new RangeError;
        }
        let t;
        let i = 0;
        for (const s of this) {
            if (i === e) {
                t = s;
                break;
            }
            i += 1;
        }
        return t;
    }
    getHeight() {
        if (this.i === 0) return 0;
        const traversal = function(e) {
            if (!e) return 0;
            return Math.max(traversal(e.Y), traversal(e.Z)) + 1;
        };
        return traversal(this.rr);
=======
    }
    re(e, t) {
        while (e) {
            const i = this.p(e.T, t);
            if (i < 0) {
                e = e.J;
            } else if (i > 0) {
                e = e.U;
            } else return e;
        }
        return e;
    }
    eraseElementByKey(e) {
        if (!this.o) return;
        const t = this.re(this.X, e);
        if (t === undefined) return;
        this.ue(t);
    }
    eraseElementByIterator(e) {
        const t = e.I;
        if (t === this.S) {
            throw new RangeError("Invalid iterator");
        }
        if (t.J === undefined) {
            e = e.next();
        }
        this.ue(t);
        return e;
    }
    getHeight() {
        if (!this.o) return 0;
        const traversal = e => {
            if (!e) return 0;
            return Math.max(traversal(e.U), traversal(e.J)) + 1;
        };
        return traversal(this.X);
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
    }
}

var _default = TreeContainer;

<<<<<<< HEAD
exports.default = _default;
//# sourceMappingURL=index.js.map
=======
exports.default = _default;
>>>>>>> 63b85f7d93ea628752d182d7c05714398f627e7a
